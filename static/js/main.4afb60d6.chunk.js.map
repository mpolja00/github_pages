{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","result","setResult","handleClick","e","includes","target","name","temp","filter","item","slice","concat","backspace","clear","calculate","eval","toString","className","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w3BAGA,SAASA,MAAQ,IAAD,UACeC,oDAAS,IADxB,qNACNC,OADM,cACEC,UADF,cAGb,SAASC,YAAYC,GAGlB,GAAc,KAAXH,QADS,CAAC,IAAI,KACOI,SAASD,EAAEE,OAAOC,MACvCL,UAAUD,aAEV,GALQ,CAAC,IAAI,IAAI,IAAI,IAAI,KAKnBI,SAASD,EAAEE,OAAOC,MAAM,CAC3B,IAAIC,EAAO,CAAC,IAAI,IAAI,IAAI,IAAI,KAC5BA,EAAOA,EAAKC,QAAO,SAASC,GACzB,OAAOA,IAASN,EAAEE,OAAOC,QAEzBN,OAAOU,OAAO,IAAMP,EAAEE,OAAOC,MAAQC,EAAKH,SAASJ,OAAOU,OAAO,IACjET,UAAUD,QACPC,UAAUD,OAAOW,OAAOR,EAAEE,OAAOC,YAEvCL,UAAUD,OAAOW,OAAOR,EAAEE,OAAOC,OAK1C,SAASM,YACNX,UAAUD,OAAOU,MAAM,GAAI,IAG9B,SAASG,QACNZ,UAAU,IAGb,SAASa,YACN,IACGb,UAAUc,KAAKf,QAAQgB,YACzB,eACEf,UAAU,UAIhB,OAEG,kEAAKgB,UAAU,WAAf,SAEG,mEAAKA,UAAU,UAAf,UACG,mEAAMA,UAAU,iBAAhB,SACG,2EAAOjB,WAGV,mEAAKiB,UAAU,SAAf,UACG,qEAAQA,UAAU,MAAMC,GAAG,QAAQC,QAASN,MAA5C,mBACA,qEAAQI,UAAU,MAAMC,GAAG,YAAYC,QAASP,UAAhD,eACA,qEAAQM,GAAG,OAAOD,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAApD,eACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,eACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,eACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,eACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,eACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,eACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,eACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,eACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,kBACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,eACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,eACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,eACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,eACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,eACA,qEAAQe,UAAU,MAAMX,KAAK,IAAIa,QAASjB,YAA1C,eACA,qEAAQe,UAAU,MAAMC,GAAG,SAASC,QAASL,UAA7C,uBAQAhB,2B,iICjEAsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjC,EAAA,EAAD,MAEFkC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4afb60d6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App () {\n   const [result, setResult] = useState('');\n   \n   function handleClick(e) {\n      const ch = [\"/\",\"*\",\"-\",\"+\",\".\"];\n      const arr = [\"*\",\"/\"];\n      if(result === \"\" && arr.includes(e.target.name)){\n         setResult(result);\n      }else {\n         if(ch.includes(e.target.name)){\n            var temp = [\"/\",\"*\",\"-\",\"+\",\".\"];\n            temp = temp.filter(function(item) {\n               return item !== e.target.name\n            })\n            if(result.slice(-1) == e.target.name || temp.includes(result.slice(-1))){\n               setResult(result);\n            }else setResult(result.concat(e.target.name));\n         }else {\n            setResult(result.concat(e.target.name));\n         }\n      }\n   }\n      \n   function backspace() {\n      setResult(result.slice(0, -1));\n   }\n\n   function clear() {\n      setResult(\"\");\n   }\n\n   function calculate() {\n      try {\n         setResult(eval(result).toString());\n      }catch {\n         setResult(\"Error\");\n      }\n   }\n\n   return (\n      \n      <div className=\"calc_app\">\n         \n         <div className=\"outline\">\n            <form className=\"result_outline\">\n               <div >{result}</div>\n            </form>\n\n            <div className=\"keypad\">\n               <button className=\"btn\" id=\"clear\" onClick={clear}>Clear</button>\n               <button className=\"btn\" id=\"backspace\" onClick={backspace}>C</button>\n               <button id=\"plus\" className=\"btn\" name=\"+\" onClick={handleClick}>+</button>\n               <button className=\"btn\" name=\"7\" onClick={handleClick}>7</button>\n               <button className=\"btn\" name=\"8\" onClick={handleClick}>8</button>\n               <button className=\"btn\" name=\"9\" onClick={handleClick}>9</button>\n               <button className=\"btn\" name=\"-\" onClick={handleClick}>-</button>\n               <button className=\"btn\" name=\"4\" onClick={handleClick}>4</button>\n               <button className=\"btn\" name=\"5\" onClick={handleClick}>5</button>\n               <button className=\"btn\" name=\"6\" onClick={handleClick}>6</button>\n               <button className=\"btn\" name=\"*\" onClick={handleClick}>Ã—</button>\n               <button className=\"btn\" name=\"1\" onClick={handleClick}>1</button>\n               <button className=\"btn\" name=\"2\" onClick={handleClick}>2</button>\n               <button className=\"btn\" name=\"3\" onClick={handleClick}>3</button>\n               <button className=\"btn\" name=\"/\" onClick={handleClick}>/</button>\n               <button className=\"btn\" name=\"0\" onClick={handleClick}>0</button>\n               <button className=\"btn\" name=\".\" onClick={handleClick}>.</button>\n               <button className=\"btn\" id=\"result\" onClick={calculate}>=</button>\n            </div> \n         </div>\n         \n      </div>\n   )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}